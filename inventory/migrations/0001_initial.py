# Generated by Django 3.0.5 on 2020-07-27 23:36

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the category (ex. "Desktop", "Tablet" )', max_length=50, verbose_name='Name')),
                ('description', models.CharField(blank=True, help_text='Description of the category (ex. "Desk", "Lendable Items" )', max_length=100, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('familiar_name', models.CharField(help_text="The identifying name for this item (ex Joe's laptop)", max_length=30, verbose_name='familiar name')),
                ('serial_number', models.CharField(blank=True, help_text="The item's serial number", max_length=30, verbose_name='serial number')),
                ('asset_number', models.CharField(blank=True, help_text="The item's asset number", max_length=30, verbose_name='asset number')),
                ('barcode', models.CharField(blank=True, help_text="The item's barcode", max_length=50, verbose_name='barcode')),
                ('hostname', models.CharField(blank=True, help_text="The item's network name or hostname", max_length=50, verbose_name='host name')),
                ('condition', models.IntegerField(blank=True, choices=[(12, 'U Unusable'), (9, 'F Disfunctional'), (6, 'D Degraded'), (3, 'W Worn but fully operational'), (0, 'N New or like new')], help_text='The condition of the item', null=True, verbose_name='condition')),
                ('inventory', models.IntegerField(blank=True, choices=[(0, 'N Not yet in use'), (3, 'I In use'), (6, 'S Stored'), (9, 'P Pending Removal'), (12, 'R Removed from Inventory')], help_text='The inventory status of the item', null=True, verbose_name='inventory status')),
                ('notes', models.TextField(blank=True, help_text='Any notes for this item', verbose_name='notes')),
                ('inventoried', models.DateField(blank=True, default=datetime.datetime.now, help_text="When this item's inventory data was last confirmed", null=True, verbose_name='date confirmed')),
            ],
            options={
                'ordering': ['familiar_name', 'makemodel', 'inventory'],
            },
        ),
        migrations.CreateModel(
            name='ItemHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True, help_text='The date this record was created', verbose_name='date')),
                ('description', models.TextField(blank=True, help_text='The description of what happened', verbose_name='description')),
            ],
            options={
                'ordering': ['item', '-date'],
            },
        ),
        migrations.CreateModel(
            name='ItemQuery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query_name', models.CharField(blank=True, help_text='The name of this query', max_length=50, verbose_name='query name')),
                ('latest_use', models.DateTimeField(auto_now=True, help_text='The most recent use of this query', verbose_name='last used')),
                ('familiar_name_value', models.CharField(blank=True, help_text="The identifying name for this item (ex Joe's laptop)", max_length=30, verbose_name='familiar name')),
                ('familiar_name_use', models.BooleanField(default=False, verbose_name='use familiar name')),
                ('familiar_name_operator', models.CharField(choices=[('familiar_name__iexact', 'equals'), ('familiar_name__icontains', 'contains')], default='familiar_name__icontains', max_length=100, verbose_name='familiar_name operator')),
                ('serial_number_value', models.CharField(blank=True, help_text="The item's serial number", max_length=30, verbose_name='serial number')),
                ('serial_number_use', models.BooleanField(default=False, verbose_name='use serial number')),
                ('serial_number_operator', models.CharField(choices=[('serial_number__iexact', 'equals'), ('serial_number__icontains', 'contains')], default='serial_number__icontains', max_length=100, verbose_name='serial_number operator')),
                ('makemodel_category_use', models.BooleanField(default=False, verbose_name='use category')),
                ('makemodel_category_operator', models.CharField(choices=[('makemodel__makemodelxcategory__category__in', 'are in'), ('exclude__makemodel__makemodelxcategory__category__in', 'are not in')], default='makemodel__makemodelxcategory__category__in', max_length=100, verbose_name='category operator')),
                ('makemodel_brand_value', models.CharField(blank=True, help_text="The item's brand", max_length=50, null=True, verbose_name='brand')),
                ('makemodel_brand_use', models.BooleanField(default=False, verbose_name='use brand')),
                ('makemodel_brand_operator', models.CharField(choices=[('makemodel__brand__iexact', 'equals'), ('makemodel__brand__icontains', 'contains')], default='makemodel__brand__icontains', max_length=100, verbose_name='makemodel operator')),
                ('makemodel_use', models.BooleanField(default=False, verbose_name='use model')),
                ('makemodel_operator', models.CharField(choices=[('makemodel__exact', 'equals')], default='makemodel__exact', max_length=100, verbose_name='model operator')),
                ('asset_number_value', models.CharField(blank=True, help_text="The item's asset number", max_length=30, verbose_name='asset number')),
                ('asset_number_use', models.BooleanField(default=False, verbose_name='use asset number')),
                ('asset_number_operator', models.CharField(choices=[('asset_number__iexact', 'equals'), ('asset_number__icontains', 'contains')], default='asset_number__icontains', max_length=100, verbose_name='asset_number operator')),
                ('barcode_value', models.CharField(blank=True, help_text="The item's barcode", max_length=50, verbose_name='barcode')),
                ('barcode_use', models.BooleanField(default=False, verbose_name='use barcode')),
                ('barcode_operator', models.CharField(choices=[('barcode__iexact', 'equals'), ('barcode__icontains', 'contains')], default='barcode__icontains', max_length=100, verbose_name='barcode operator')),
                ('hostname_value', models.CharField(blank=True, help_text="The item's network name or hostname", max_length=50, verbose_name='host name')),
                ('hostname_use', models.BooleanField(default=False, verbose_name='use hostname')),
                ('hostname_operator', models.CharField(choices=[('hostname__iexact', 'equals'), ('hostname__icontains', 'contains')], default='hostname__icontains', max_length=100, verbose_name='hostname operator')),
                ('roles_use', models.BooleanField(default=False, verbose_name='use roles')),
                ('roles_operator', models.CharField(choices=[('itemxrole__role__in', 'are in'), ('exclude__itemxrole__role__in', 'are not in')], default='itemxrole__role__in', max_length=100, verbose_name='roles operator')),
                ('home_use', models.BooleanField(default=False, verbose_name='use home')),
                ('home_operator', models.CharField(choices=[('home__exact', 'equals')], default='home__exact', max_length=100, verbose_name='home operator')),
                ('location_use', models.BooleanField(default=False, verbose_name='use location')),
                ('location_operator', models.CharField(choices=[('location__iexact', 'equals'), ('location__icontains', 'contains')], default='location__icontains', max_length=100, verbose_name='location operator')),
                ('condition_value', models.IntegerField(blank=True, choices=[(12, 'U Unusable'), (9, 'F Disfunctional'), (6, 'D Degraded'), (3, 'W Worn but fully operational'), (0, 'N New or like new')], help_text='The condition of the item', null=True, verbose_name='condition')),
                ('condition_use', models.BooleanField(default=False, verbose_name='use condition')),
                ('condition_operator', models.CharField(choices=[('condition__iexact', 'equals'), ('condition__icontains', 'contains')], default='condition__icontains', max_length=100, verbose_name='condition operator')),
                ('inventory_value', models.IntegerField(blank=True, choices=[(0, 'N Not yet in use'), (3, 'I In use'), (6, 'S Stored'), (9, 'P Pending Removal'), (12, 'R Removed from Inventory')], help_text='The inventory status of the item', null=True, verbose_name='inventory status')),
                ('inventory_use', models.BooleanField(default=False, verbose_name='use inventory status')),
                ('inventory_operator', models.CharField(choices=[('inventory__iexact', 'equals'), ('inventory__icontains', 'contains')], default='inventory__icontains', max_length=100, verbose_name='inventory operator')),
                ('keeper_use', models.BooleanField(default=False, verbose_name='use keeper')),
                ('keeper_operator', models.CharField(choices=[('keeper__iexact', 'equals'), ('keeper__icontains', 'contains')], default='keeper__icontains', max_length=100, verbose_name='keeper operator')),
                ('borrower_use', models.BooleanField(default=False, verbose_name='use borrower')),
                ('borrower_operator', models.CharField(choices=[('borrower__iexact', 'equals'), ('borrower__icontains', 'contains')], default='borrower__icontains', max_length=100, verbose_name='borrower operator')),
                ('lessor_use', models.BooleanField(default=False, verbose_name='use lessor')),
                ('lessor_operator', models.CharField(choices=[('lessor__iexact', 'equals'), ('lessor__icontains', 'contains')], default='lessor__icontains', max_length=100, verbose_name='lessor operator')),
                ('inventoried_1_value', models.DateField(blank=True, help_text='Date inventory data last confirmed', null=True, verbose_name='date confirmed')),
                ('inventoried_1_use', models.BooleanField(default=False, verbose_name='use date confirmed')),
                ('inventoried_1_operator', models.CharField(choices=[('inventoried__gte', 'on or after')], default='inventoried__gte', max_length=100, verbose_name='date confirmed operator')),
                ('inventoried_2_value', models.DateField(blank=True, help_text='Date inventory data last confirmed', null=True, verbose_name='date confirmed')),
                ('inventoried_2_use', models.BooleanField(default=False, verbose_name='use date confirmed')),
                ('inventoried_2_operator', models.CharField(choices=[('inventoried__lte', 'on or before')], default='inventoried__lte', max_length=100, verbose_name='date confirmed operator')),
                ('notes_value', models.CharField(blank=True, help_text='Any notes for this item', max_length=100, verbose_name='notes')),
                ('notes_use', models.BooleanField(default=False, verbose_name='use notes')),
                ('notes_operator', models.CharField(choices=[('notes__iexact', 'equals'), ('notes__icontains', 'contains')], default='notes__icontains', max_length=100, verbose_name='notes operator')),
                ('orderby1', models.CharField(choices=[('familiar_name', 'Name'), ('-familiar_name', 'Name DESC'), ('serial_number', 'Serial Number'), ('-serial_number', 'Serial Number DESC'), ('makemodel', 'Model'), ('-makemodel', 'Model DESC'), ('asset_number', 'Asset Number'), ('-asset_number', 'Asset Number DESC'), ('barcode', 'Barcode'), ('-barcode', 'Barcode DESC'), ('hostname', 'Host name'), ('-hostname', 'Host name DESC'), ('roles', 'Roles'), ('-roles', 'Roles DESC'), ('home', 'Home'), ('-home', 'Home DESC'), ('location', 'Current Location'), ('-location', 'Current Location DESC'), ('condition', 'Condition'), ('-condition', 'Condition DESC'), ('inventory', 'Inventory Status'), ('-inventory', 'Inventory Status DESC'), ('keeper', 'Keeper'), ('-keeper', 'Keeper DESC'), ('borrower', 'Borrower'), ('-borrower', 'Borrower DESC'), ('lessor', 'Lessor'), ('-lessor', 'Lessor DESC'), ('inventoried', 'Date Inventoried'), ('-inventoried', 'Date Iventoried DESC')], default='makemodel', max_length=20, verbose_name='order by')),
                ('orderby2', models.CharField(choices=[('familiar_name', 'Name'), ('-familiar_name', 'Name DESC'), ('serial_number', 'Serial Number'), ('-serial_number', 'Serial Number DESC'), ('makemodel', 'Model'), ('-makemodel', 'Model DESC'), ('asset_number', 'Asset Number'), ('-asset_number', 'Asset Number DESC'), ('barcode', 'Barcode'), ('-barcode', 'Barcode DESC'), ('hostname', 'Host name'), ('-hostname', 'Host name DESC'), ('roles', 'Roles'), ('-roles', 'Roles DESC'), ('home', 'Home'), ('-home', 'Home DESC'), ('location', 'Current Location'), ('-location', 'Current Location DESC'), ('condition', 'Condition'), ('-condition', 'Condition DESC'), ('inventory', 'Inventory Status'), ('-inventory', 'Inventory Status DESC'), ('keeper', 'Keeper'), ('-keeper', 'Keeper DESC'), ('borrower', 'Borrower'), ('-borrower', 'Borrower DESC'), ('lessor', 'Lessor'), ('-lessor', 'Lessor DESC'), ('inventoried', 'Date Inventoried'), ('-inventoried', 'Date Iventoried DESC')], default='inventory', max_length=20, verbose_name='order by')),
                ('orderby3', models.CharField(choices=[('familiar_name', 'Name'), ('-familiar_name', 'Name DESC'), ('serial_number', 'Serial Number'), ('-serial_number', 'Serial Number DESC'), ('makemodel', 'Model'), ('-makemodel', 'Model DESC'), ('asset_number', 'Asset Number'), ('-asset_number', 'Asset Number DESC'), ('barcode', 'Barcode'), ('-barcode', 'Barcode DESC'), ('hostname', 'Host name'), ('-hostname', 'Host name DESC'), ('roles', 'Roles'), ('-roles', 'Roles DESC'), ('home', 'Home'), ('-home', 'Home DESC'), ('location', 'Current Location'), ('-location', 'Current Location DESC'), ('condition', 'Condition'), ('-condition', 'Condition DESC'), ('inventory', 'Inventory Status'), ('-inventory', 'Inventory Status DESC'), ('keeper', 'Keeper'), ('-keeper', 'Keeper DESC'), ('borrower', 'Borrower'), ('-borrower', 'Borrower DESC'), ('lessor', 'Lessor'), ('-lessor', 'Lessor DESC'), ('inventoried', 'Date Inventoried'), ('-inventoried', 'Date Iventoried DESC')], default='condition', max_length=20, verbose_name='order by')),
                ('paginate_by', models.IntegerField(default=10, verbose_name='paginate by')),
            ],
            options={
                'ordering': ['-latest_use'],
            },
        ),
        migrations.CreateModel(
            name='ItemXRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the building, vehicle, campus, etc.. ', max_length=30, verbose_name='Name')),
                ('abbreviation', models.CharField(help_text='An abbreviation for the location', max_length=30, verbose_name='Abbreviation')),
                ('priority', models.IntegerField(default=5, help_text='A number for sorting (in default order, low numbers are first)', verbose_name='Priority')),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MakeModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, help_text='The models brand', max_length=30, verbose_name='Brand')),
                ('name', models.CharField(blank=True, help_text='The model name', max_length=30, verbose_name='Model Name')),
                ('part_number', models.CharField(blank=True, help_text='The part number or designation other than the marketed model name', max_length=30, verbose_name='Part Number')),
                ('description', models.CharField(blank=True, help_text="The description (ex 'Laptop Computer', 'Tablet', 'Printer'", max_length=100, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Make/Model',
                'verbose_name_plural': 'Makes/Models',
                'ordering': ['brand', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MakeModelXCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the role (ex. "Staff", "Lendable" )', max_length=50, verbose_name='Name')),
                ('description', models.CharField(blank=True, help_text='Description of the role (ex. "Items Apporoved for the Domain", "Lendable Items" )', max_length=100, verbose_name='Description')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserParameters',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(blank=True, help_text='The name of the setting', max_length=130, verbose_name='key')),
                ('value', models.TextField(blank=True, help_text='The value of the setting', verbose_name='value')),
            ],
        ),
    ]
