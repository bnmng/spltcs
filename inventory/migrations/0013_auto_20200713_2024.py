# Generated by Django 3.0.5 on 2020-07-13 20:24

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0012_auto_20200713_2014'),
    ]

    operations = [
        migrations.AlterField(
            model_name='itemquery',
            name='asset_number_operator',
            field=models.CharField(choices=[('asset_number__iexact', 'equals'), ('asset_number__icontains', 'contains')], default='asset_number__icontains', max_length=100, verbose_name='asset_number operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='barcode_operator',
            field=models.CharField(choices=[('barcode__iexact', 'equals'), ('barcode__icontains', 'contains')], default='barcode__icontains', max_length=100, verbose_name='barcode operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='borrower_operator',
            field=models.CharField(choices=[('borrower__iexact', 'equals'), ('borrower__icontains', 'contains')], default='borrower__icontains', max_length=100, verbose_name='borrower operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='condition_operator',
            field=models.CharField(choices=[('condition__iexact', 'equals'), ('condition__icontains', 'contains')], default='condition__icontains', max_length=100, verbose_name='condition operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='familiar_name_operator',
            field=models.CharField(choices=[('familiar_name__iexact', 'equals'), ('familiar_name__icontains', 'contains')], default='familiar_name__icontains', max_length=100, verbose_name='familiar_name operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='home_operator',
            field=models.CharField(choices=[('home__exact', 'equals')], default='home__exact', max_length=100, verbose_name='home operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='hostname_operator',
            field=models.CharField(choices=[('hostname__iexact', 'equals'), ('hostname__icontains', 'contains')], default='hostname__icontains', max_length=100, verbose_name='hostname operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='inventoried_1_operator',
            field=models.CharField(choices=[('inventoried__gte', 'on or after')], default='inventoried__gte', max_length=100, verbose_name='date confirmed operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='inventoried_2_operator',
            field=models.CharField(choices=[('inventoried__lte', 'on or before')], default='inventoried__lte', max_length=100, verbose_name='date confirmed operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='inventory_operator',
            field=models.CharField(choices=[('inventory__iexact', 'equals'), ('inventory__icontains', 'contains')], default='inventory__icontains', max_length=100, verbose_name='inventory operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='keeper_operator',
            field=models.CharField(choices=[('keeper__iexact', 'equals'), ('keeper__icontains', 'contains')], default='keeper__icontains', max_length=100, verbose_name='keeper operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='lessor_operator',
            field=models.CharField(choices=[('lessor__iexact', 'equals'), ('lessor__icontains', 'contains')], default='lessor__icontains', max_length=100, verbose_name='lessor operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='location_operator',
            field=models.CharField(choices=[('location__iexact', 'equals'), ('location__icontains', 'contains')], default='location__icontains', max_length=100, verbose_name='location operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='makemodel_brand_operator',
            field=models.CharField(choices=[('makemodel__brand__iexact', 'equals'), ('makemodel__brand__icontains', 'contains')], default='makemodel__brand__icontains', max_length=100, verbose_name='makemodel operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='makemodel_category_operator',
            field=models.CharField(choices=[('makemodel__makemodelxcategory__category__in', 'are in'), ('exclude__makemodel__makemodelxcategory__category__in', 'are not in')], default='makemodel__makemodelxcategory__category__in', max_length=100, verbose_name='category operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='makemodel_operator',
            field=models.CharField(choices=[('makemodel__exact', 'equals')], default='makemodel__exact', max_length=100, verbose_name='model operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='notes_operator',
            field=models.CharField(choices=[('notes__iexact', 'equals'), ('notes__icontains', 'contains')], default='notes__icontains', max_length=100, verbose_name='notes operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='roles_operator',
            field=models.CharField(choices=[('itemxrole__role__in', 'are in'), ('exclude__itemxrole__role__in', 'are not in')], default='itemxrole__role__in', max_length=100, verbose_name='roles operator'),
        ),
        migrations.AlterField(
            model_name='itemquery',
            name='serial_number_operator',
            field=models.CharField(choices=[('serial_number__iexact', 'equals'), ('serial_number__icontains', 'contains')], default='serial_number__icontains', max_length=100, verbose_name='serial_number operator'),
        ),
    ]
